(in-package :kaavio-user)

(defparameter *uml-state-begin-radius*     10)
(defparameter *uml-state-begin-fill*   :black)
(defparameter *uml-state-begin-filter*    nil)
(defparameter *uml-state-begin-layer*     nil)

;;------------------------------------------------------------------------------
;;
;; class uml-state-begin
;;
;;------------------------------------------------------------------------------
(defclass uml-state-begin (kaavio:circle) ())


(defmethod initialize-instance :after ((obj uml-state-begin) &rest initargs)
  (declare (ignore initargs))
  ;;(format t "initialize-instance :after called.~%")
  (with-slots (filter layer) obj
    (setf filter  (if (eq filter :none)
                      nil
                      (or filter *uml-state-begin-filter* *default-filter*)))
    (setf layer  (if (eq layer :none)
                     nil
                     (or layer *uml-state-begin-layer* *default-layer*))))
  obj)


;;------------------------------------------------------------------------------------- BEGIN TURNUP
;;#### macro uml-state-begin
;;
;;<!-- stack:push li class='syntax' -->
;;${SYNTAX}
;;
;;* ${{B}{uml-state-begin}} position ${KEY} radius pivot fill link layer filter id
;;
;;<!-- stack:pop li -->
;;
;;${ARGS_AND_VALS}
;;
;;* `position` ---- 描画の基準点を指定します。詳細は「[](#座標と位置)」を参照してください。
;;* `radius` ---- 開始状態の半径を数値で指定します。省略した場合のデフォルト値は 10 です。
;;* `pivot` ---- `position` で指定した基準点が図形要素のどこにくるように描画するかを指定します。詳細は「[](#座標と位置)」を参照してください。
;;* `fill` ---- 円を塗り潰す色を指定します。省略した場合のデフォルト値は `:black` です。
;;* `link` ---- リンクにする場合、リンク先を指定します。
;;* `layer` ---- レイヤーを指定する場合、その ID をキーワードシンボルで指定します
;;* `filter` ---- フィルタを適用したい場合、その ID をキーワードシンボルで指定します
;;* `id` ---- ID を付与したい場合、その名前をキーワードシンボルで指定します
;;
;;${DESCRIPTION}
;;
;;　UML 状態マシン図における開始状態を描画します。スタイルを統一したい場合、
;;with-uml-state-begin-options マクロを使うことができます。
;;
;;${SEE_ALSO}
;;
;;* [$$](#状態マシン図)
;;* [$$](#uml-state-begin)
;;* with-uml-state-begin-options マクロ
;;
;;${NO_NOTES}
;;
;;--------------------------------------------------------------------------------------- END TURNUP
(defmacro uml-state-begin (position &key radius pivot fill link layer filter id)
  `(register-entity (make-instance 'uml-state-begin
                                   :position ,position :pivot ,pivot
                                   :radius (or ,radius *uml-state-begin-radius*)
                                   :fill (or ,fill *uml-state-begin-fill* *default-fill*)
                                   :clip-path kaavio:*current-clip-path*
                                   :stroke :none :link ,link :layer ,layer :filter ,filter :id ,id)))


;;------------------------------------------------------------------------------------- BEGIN TURNUP
;;#### macro with-uml-state-begin-options
;;
;;<!-- stack:push li class='syntax' -->
;;${SYNTAX}
;;
;;* ${{B}{with-uml-state-begin-options}} (${KEY} radius fill filter layer) ${BODY} body
;;
;;<!-- stack:pop li -->
;;
;;${DESCRIPTION}
;;
;;　uml-state-begin マクロで描画される図形要素のデフォルトオプションを変更します。キーワード
;;パラメータ群の説明は uml-state-begin マクロを参照してください。
;;
;;${SEE_ALSO}
;;
;;* uml-state-begin マクロ
;;
;;${NO_NOTES}
;;
;;--------------------------------------------------------------------------------------- END TURNUP
(defmacro with-uml-state-begin-options ((&key (radius nil radius-p)
                                              (fill   nil fill-p)
                                              (filter nil filter-p)
                                              (layer  nil layer-p)) &rest body)
  (let ((bindings nil))
    (labels ((impl (arg-p binding)
               (when arg-p (push binding bindings))))
      (impl radius-p `(*uml-state-begin-radius* ,radius))
      (impl fill-p   `(*uml-state-begin-fill*   (make-fill2 *uml-state-begin-fill* ,fill)))
      (impl filter-p `(*uml-state-begin-filter* ,filter))
      (impl layer-p  `(*uml-state-begin-layer*  ,layer)))
    `(let ,(nreverse bindings)
       ,@body)))
